{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","components/CompletedItem.js","components/CompletedTask.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","this","props","item","handleChange","handleSubmit","editItem","invalidInput","showDetail","moreDetails","showTime","handleTime","console","log","time","className","style","color","onSubmit","type","placeholder","value","onChange","minWidth","width","onClick","cursor","Component","TodoItem","title","date","handleDelete","handleEdit","taskCompleted","minHeight","float","fontSize","TodoList","items","clearList","map","key","id","CompletedItem","taskUncompleted","deleteCompletedTask","checked","textDecoration","CompletedTask","clearCompletedTask","React","App","state","uuid","completedTask","Date","toLocaleTimeString","toLocaleDateString","e","setState","target","preventDefault","newItem","updatedItems","filteredItem","filter","selectedItem","find","prevItem","updatedCompletedTask","uncompletedTask","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wNAEqBA,E,uKACT,IAAD,EAWHC,KAAKC,MATPC,EAFK,EAELA,KACAC,EAHK,EAGLA,aACAC,EAJK,EAILA,aACAC,EALK,EAKLA,SACAC,EANK,EAMLA,aACAC,EAPK,EAOLA,WACAC,EARK,EAQLA,YACAC,EATK,EASLA,SACAC,EAVK,EAULA,WAGF,OADAC,QAAQC,WAAWC,MAEjB,yBAAKC,UAAU,uBACb,yBACEA,UACER,EAAe,qCAAuC,SAExDS,MAAO,CAAEC,MAAO,QAJlB,6CAQA,0BAAMC,SAAUb,GACd,yBAAKU,UAAU,eACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,kBAGjB,2BACEI,KAAK,OACLJ,UAAU,+BACVK,YAAY,kBACZC,MAAOlB,EACPmB,SAAUlB,IAEZ,yBACEY,MAAO,CAAEO,SAAU,QACnBR,WAA2B,IAAhBN,EAAwB,SAAW,WAE9C,2BACEU,KAAK,OACLC,YAAY,0BACZL,UAAU,2CAIhB,yBACEC,MAAO,CACLO,SAAU,QAEZR,WAAwB,IAAbL,EAAqB,SAAW,WAE3C,yBAAKK,UAAU,WACb,2BAAOI,KAAK,OAAOE,MAAM,QAAQN,UAAU,iBAC3C,2BACEI,KAAK,OACLJ,UAAU,yBACVC,MAAO,CAAEQ,MAAO,UAChBH,MAAM,QAIZ,yBAAKN,UAAU,sDACb,0BACEA,UAAU,kBACVU,QAASjB,EACTQ,MAAO,CAAEU,OAAQ,YAEjB,uBAAGX,UAAU,oBAEf,0BACEA,UAAU,kBACVC,MAAO,CAAEU,OAAQ,WACjBD,QAASd,GAET,uBAAGI,UAAU,2BAEf,4BACEI,KAAK,SACLJ,UACET,EACI,6BACA,8BAGLA,EAAW,YAAc,mB,GAxFDqB,aCAlBC,E,uKACT,IAAD,EAQH3B,KAAKC,MANP2B,EAFK,EAELA,MACAf,EAHK,EAGLA,KACAgB,EAJK,EAILA,KACAC,EALK,EAKLA,aACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,cAEF,OACE,wBAAIlB,UAAU,uEACZ,2BACEI,KAAK,WACLM,QAASQ,EACTjB,MAAO,CAAEO,SAAU,QAASW,UAAW,QAASC,MAAO,UAEzD,4BAAKN,GAEL,yBAAKd,UAAU,aACb,yBAAKC,MAAO,CAAEoB,SAAU,SAAWrB,UAAU,UAC1CD,GAEH,yBAAKE,MAAO,CAAEoB,SAAU,UAAYN,GACpC,0BACEf,UAAU,oBACVU,QAASO,EACThB,MAAO,CAAEU,OAAQ,YAEjB,uBAAGX,UAAU,gBAEf,0BACEA,UAAU,mBACVU,QAASM,EACTf,MAAO,CAAEU,OAAQ,YAEjB,uBAAGX,UAAU,wB,GApCaY,aCEjBU,E,uKACT,IAAD,EAOHpC,KAAKC,MALPoC,EAFK,EAELA,MACAC,EAHK,EAGLA,UACAR,EAJK,EAILA,aACAC,EALK,EAKLA,WACAC,EANK,EAMLA,cAEF,OACE,wBAAIlB,UAAU,mBACZ,wBAAIA,UAAU,+BAAd,aACCuB,EAAME,KAAI,SAACrC,GACV,OACE,kBAAC,EAAD,CACEsC,IAAKtC,EAAKuC,GACVb,MAAO1B,EAAK0B,MACZf,KAAMX,EAAKW,KACXgB,KAAM3B,EAAK2B,KACXC,aAAc,kBAAMA,EAAa5B,EAAKuC,KACtCV,WAAY,kBAAMA,EAAW7B,EAAKuC,KAClCT,cAAe,kBAAMA,EAAc9B,SAIzC,4BACEgB,KAAK,SACLJ,UAAU,gDACVU,QAASc,GAHX,mB,GAzB8BZ,a,gBCyBvBgB,EA3BO,SAACzC,GAAW,IACxB2B,EAAgD3B,EAAhD2B,MAAOe,EAAyC1C,EAAzC0C,gBAAiBC,EAAwB3C,EAAxB2C,oBAChC,OACE,wBAAI9B,UAAU,uDACZ,2BACEI,KAAK,WACLG,SAAUsB,EACV5B,MAAO,CAAEO,SAAU,SAAUW,UAAW,UACxCY,SAAO,IAET,wBAAI9B,MAAO,CAAE+B,eAAgB,eAAgB9B,MAAO,YACjDY,GAGH,yBAAKd,UAAU,aACb,0BACEA,UAAU,mBACVU,QAASoB,EACT7B,MAAO,CAAEU,OAAQ,YAEjB,uBAAGX,UAAU,oBCcRiC,E,uKA/BH,IAAD,EAMH/C,KAAKC,MAJPoC,EAFK,EAELA,MACAM,EAHK,EAGLA,gBACAK,EAJK,EAILA,mBACAJ,EALK,EAKLA,oBAEF,OACE,wBAAI9B,UAAU,mBACZ,wBAAIA,UAAU,+BAAd,kBACCuB,EAAME,KAAI,SAACrC,GAAD,OACT,kBAAC,EAAD,CACEsC,IAAKtC,EAAKuC,GACVb,MAAO1B,EAAK0B,MACZe,gBAAiB,kBAAMA,EAAgBzC,IACvC8C,mBAAoBA,EACpBJ,oBAAqB,kBAAMA,EAAoB1C,EAAKuC,UAGxD,4BACEvB,KAAK,SACLJ,UAAU,sCACVU,QAASwB,GAHX,6B,GApBoBC,IAAMvB,WCwKnBwB,E,4MAnKbC,MAAQ,CACNd,MAAO,GACPI,GAAIW,cACJlD,KAAM,GACNmD,cAAe,GACfxC,KAAK,GAAD,QAAK,IAAIyC,MAAOC,sBACpB1B,KAAK,GAAD,QAAK,IAAIyB,MAAOE,sBACpBnD,UAAU,EACVC,cAAc,EACdE,aAAa,EACbC,UAAU,G,EAGZN,aAAe,SAACsD,GACd,EAAKC,SAAS,CACZxD,KAAMuD,EAAEE,OAAOvC,S,EAInBhB,aAAe,SAACqD,GAEd,GADAA,EAAEG,iBACsB,KAApB,EAAKT,MAAMjD,KAEb,OADA,EAAKwD,SAAS,CAAEpD,cAAc,KACvB,EAGT,IAAMuD,EAAU,CACdpB,GAAI,EAAKU,MAAMV,GACfb,MAAO,EAAKuB,MAAMjD,KAClBW,KAAM,EAAKsC,MAAMtC,KACjBgB,KAAM,EAAKsB,MAAMtB,MAGbiC,EAAY,sBAAO,EAAKX,MAAMd,OAAlB,CAAyBwB,IAE3C,EAAKH,SAAS,CACZrB,MAAOyB,EACP5D,KAAM,GACNuC,GAAIW,cACJ/C,UAAU,EACVC,cAAc,K,EAIlBgC,UAAY,WACV,EAAKoB,SAAS,CACZrB,MAAO,M,EAIXP,aAAe,SAACW,GACd,IAAMsB,EAAe,EAAKZ,MAAMd,MAAM2B,QAAO,SAAC9D,GAAD,OAAUA,EAAKuC,KAAOA,KACnE,EAAKiB,SAAS,CACZrB,MAAO0B,K,EAIXhC,WAAa,SAACU,GACZ,IAAMsB,EAAe,EAAKZ,MAAMd,MAAM2B,QAAO,SAAC9D,GAAD,OAAUA,EAAKuC,KAAOA,KAE7DwB,EAAe,EAAKd,MAAMd,MAAM6B,MAAK,SAAChE,GAAD,OAAUA,EAAKuC,KAAOA,KAEjE,EAAKiB,SAAS,CACZrB,MAAO0B,EACP7D,KAAM+D,EAAarC,MACnBvB,UAAU,EACVoC,Q,EAIJT,cAAgB,SAAC9B,GACf,IAAM6D,EAAe,EAAKZ,MAAMd,MAAM2B,QACpC,SAACG,GAAD,OAAcA,EAAS1B,KAAOvC,EAAKuC,MAG/BY,EAAgB,EAAKF,MAAMd,MAAM6B,MACrC,SAACC,GAAD,OAAcA,EAAS1B,KAAOvC,EAAKuC,MAG/B2B,EAAoB,sBAAO,EAAKjB,MAAME,eAAlB,CAAiCA,IAE3D,EAAKK,SAAS,CACZrB,MAAO0B,EACPV,cAAee,K,EAGnBzB,gBAAkB,SAACzC,GACjB,IAAM6D,EAAe,EAAKZ,MAAME,cAAcW,QAC5C,SAACG,GAAD,OAAcA,EAAS1B,KAAOvC,EAAKuC,MAG/B4B,EAAkB,EAAKlB,MAAME,cAAca,MAC/C,SAACC,GAAD,OAAcA,EAAS1B,KAAOvC,EAAKuC,MAG/BqB,EAAY,sBAAO,EAAKX,MAAMd,OAAlB,CAAyBgC,IAE3C,EAAKX,SAAS,CACZrB,MAAOyB,EACPT,cAAeU,K,EAInBf,mBAAqB,WACnB,EAAKU,SAAS,CACZL,cAAe,M,EAGnBT,oBAAsB,SAACH,GACrB,IAAMsB,EAAe,EAAKZ,MAAME,cAAcW,QAC5C,SAAC9D,GAAD,OAAUA,EAAKuC,KAAOA,KAExB,EAAKiB,SAAS,CACZL,cAAeU,K,EAGnBxD,WAAa,YACoB,IAA3B,EAAK4C,MAAM3C,YAAuB,EAAKkD,SAAS,CAAElD,aAAa,IAC9D,EAAKkD,SAAS,CAAElD,aAAa,K,EAEpCE,WAAa,YACiB,IAAxB,EAAKyC,MAAM1C,SAAoB,EAAKiD,SAAS,CAAEjD,UAAU,IACxD,EAAKiD,SAAS,CAAEjD,UAAU,K,uDAG/B,OACE,yBAAKK,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,+BAAd,iBACA,kBAAC,EAAD,CACEZ,KAAMF,KAAKmD,MAAMjD,KACjBC,aAAcH,KAAKG,aACnBC,aAAcJ,KAAKI,aACnBC,SAAUL,KAAKmD,MAAM9C,SACrBC,aAAcN,KAAKmD,MAAM7C,aACzBE,YAAaR,KAAKmD,MAAM3C,YACxBD,WAAYP,KAAKO,WACjBE,SAAUT,KAAKmD,MAAM1C,SACrBC,WAAYV,KAAKU,WACjBG,KAAMb,KAAKmD,MAAMtC,KACjBgB,KAAM7B,KAAKmD,MAAMtB,OAEnB,kBAAC,EAAD,CACEQ,MAAOrC,KAAKmD,MAAMd,MAClBC,UAAWtC,KAAKsC,UAChBR,aAAc9B,KAAK8B,aACnBC,WAAY/B,KAAK+B,WACjBC,cAAehC,KAAKgC,gBAEtB,kBAAC,EAAD,CACEK,MAAOrC,KAAKmD,MAAME,cAClBV,gBAAiB3C,KAAK2C,gBACtBK,mBAAoBhD,KAAKgD,mBACzBJ,oBAAqB5C,KAAK4C,6B,GA3JtBK,IAAMvB,WCIJ4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5E,QAAQ4E,MAAMA,EAAMC,a","file":"static/js/main.1c4c5546.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class TodoInput extends Component {\r\n  render() {\r\n    const {\r\n      item,\r\n      handleChange,\r\n      handleSubmit,\r\n      editItem,\r\n      invalidInput,\r\n      showDetail,\r\n      moreDetails,\r\n      showTime,\r\n      handleTime,\r\n    } = this.props;\r\n    console.log(typeof time);\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <div\r\n          className={\r\n            invalidInput ? \"text-capitalize alert alert-danger\" : \"d-none\"\r\n          }\r\n          style={{ color: \"red\" }}\r\n        >\r\n          please the Todo List Input can't be empty\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text bg-primary text-white\">\r\n                <i className=\"fas fa-book\" />\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control text-capitalize\"\r\n              placeholder=\"add a todo item\"\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n            <div\r\n              style={{ minWidth: \"100%\" }}\r\n              className={moreDetails === false ? \"d-none\" : \"d-block\"}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"more Details about Task\"\r\n                className=\"form-control text-capitalize d-block\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              minWidth: \"100%\",\r\n            }}\r\n            className={showTime === false ? \"d-none\" : \"d-block\"}\r\n          >\r\n            <div className=\"d-flex \">\r\n              <input type=\"time\" value=\"12:30\" className=\"ml-auto mr-0\" />\r\n              <input\r\n                type=\"date\"\r\n                className=\"d-iniline mr-auto ml-0\"\r\n                style={{ width: \"6.4rem\" }}\r\n                value=\" \"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"input-group-text bg-secondary d-inline d-flex mt-0\">\r\n            <span\r\n              className=\"mx-2 text-white\"\r\n              onClick={showDetail}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <i className=\"fas fa-list-ul\" />\r\n            </span>\r\n            <span\r\n              className=\"mx-2 text-white\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleTime}\r\n            >\r\n              <i className=\"far fa-calendar-check\" />\r\n            </span>\r\n            <button\r\n              type=\"submit\"\r\n              className={\r\n                editItem\r\n                  ? \"btn btn-block btn-success \"\r\n                  : \"btn btn-block btn-primary \"\r\n              }\r\n            >\r\n              {editItem ? \"edit item\" : \"add item\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TodoItem extends Component {\r\n  render() {\r\n    const {\r\n      title,\r\n      time,\r\n      date,\r\n      handleDelete,\r\n      handleEdit,\r\n      taskCompleted,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"list-group-item text-capitalize d-flex justify-content-between my-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          onClick={taskCompleted}\r\n          style={{ minWidth: \"1.2em\", minHeight: \"1.2em\", float: \"left\" }}\r\n        />\r\n        <h6>{title}</h6>\r\n\r\n        <div className=\"todo-icon\">\r\n          <div style={{ fontSize: \".6rem\" }} className=\"d-flex\">\r\n            {time}\r\n          </div>\r\n          <div style={{ fontSize: \".6rem\" }}>{date}</div>\r\n          <span\r\n            className=\"mx-2 text-success\"\r\n            onClick={handleEdit}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <i className=\"fas fa-pen\" />\r\n          </span>\r\n          <span\r\n            className=\"mx-2 text-danger\"\r\n            onClick={handleDelete}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <i className=\"fas fa-trash\" />\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    const {\r\n      items,\r\n      clearList,\r\n      handleDelete,\r\n      handleEdit,\r\n      taskCompleted,\r\n    } = this.props;\r\n    return (\r\n      <ul className=\"list-group my-5\">\r\n        <h3 className=\"text-capitalize text-center\">todo list</h3>\r\n        {items.map((item) => {\r\n          return (\r\n            <TodoItem\r\n              key={item.id}\r\n              title={item.title}\r\n              time={item.time}\r\n              date={item.date}\r\n              handleDelete={() => handleDelete(item.id)}\r\n              handleEdit={() => handleEdit(item.id)}\r\n              taskCompleted={() => taskCompleted(item)}\r\n            />\r\n          );\r\n        })}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-block text-capitalize mt-5\"\r\n          onClick={clearList}\r\n        >\r\n          clear list\r\n        </button>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst CompletedItem = (props) => {\r\n  const { title, taskUncompleted, deleteCompletedTask } = props;\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between my-2\">\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={taskUncompleted}\r\n        style={{ minWidth: \"1.1rem\", minHeight: \"1.1rem\" }}\r\n        checked\r\n      />\r\n      <h6 style={{ textDecoration: \"line-through\", color: \"#ababab\" }}>\r\n        {title}\r\n      </h6>\r\n\r\n      <div className=\"todo-icon\">\r\n        <span\r\n          className=\"mx-2 text-danger\"\r\n          onClick={deleteCompletedTask}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <i className=\"fa fa-trash\" />\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CompletedItem;\r\n","import React from \"react\";\r\n\r\nimport CompletedItem from \"./CompletedItem\";\r\n\r\nclass CompletedTask extends React.Component {\r\n  render() {\r\n    const {\r\n      items,\r\n      taskUncompleted,\r\n      clearCompletedTask,\r\n      deleteCompletedTask,\r\n    } = this.props;\r\n    return (\r\n      <ul className=\"list-group my-5\">\r\n        <h3 className=\"text-capitalize text-center\">Completed Task</h3>\r\n        {items.map((item) => (\r\n          <CompletedItem\r\n            key={item.id}\r\n            title={item.title}\r\n            taskUncompleted={() => taskUncompleted(item)}\r\n            clearCompletedTask={clearCompletedTask}\r\n            deleteCompletedTask={() => deleteCompletedTask(item.id)}\r\n          />\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger text-capitalize mt-5\"\r\n          onClick={clearCompletedTask}\r\n        >\r\n          Clear Completed Task\r\n        </button>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompletedTask;\r\n","import React from \"react\";\n\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { v1 as uuid } from \"uuid\";\nimport CompletedTask from \"./components/CompletedTask\";\n\nclass App extends React.Component {\n  state = {\n    items: [],\n    id: uuid(),\n    item: \"\",\n    completedTask: [],\n    time: `${new Date().toLocaleTimeString()}`,\n    date: `${new Date().toLocaleDateString()}`,\n    editItem: false,\n    invalidInput: false,\n    moreDetails: false,\n    showTime: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      item: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.item === \"\") {\n      this.setState({ invalidInput: true });\n      return false;\n    }\n\n    const newItem = {\n      id: this.state.id,\n      title: this.state.item,\n      time: this.state.time,\n      date: this.state.date,\n    };\n\n    const updatedItems = [...this.state.items, newItem];\n\n    this.setState({\n      items: updatedItems,\n      item: \"\",\n      id: uuid(),\n      editItem: false,\n      invalidInput: false,\n    });\n  };\n\n  clearList = () => {\n    this.setState({\n      items: [],\n    });\n  };\n\n  handleDelete = (id) => {\n    const filteredItem = this.state.items.filter((item) => item.id !== id);\n    this.setState({\n      items: filteredItem,\n    });\n  };\n\n  handleEdit = (id) => {\n    const filteredItem = this.state.items.filter((item) => item.id !== id);\n\n    const selectedItem = this.state.items.find((item) => item.id === id);\n\n    this.setState({\n      items: filteredItem,\n      item: selectedItem.title,\n      editItem: true,\n      id,\n    });\n  };\n\n  taskCompleted = (item) => {\n    const filteredItem = this.state.items.filter(\n      (prevItem) => prevItem.id !== item.id\n    );\n\n    const completedTask = this.state.items.find(\n      (prevItem) => prevItem.id === item.id\n    );\n\n    const updatedCompletedTask = [...this.state.completedTask, completedTask];\n\n    this.setState({\n      items: filteredItem,\n      completedTask: updatedCompletedTask,\n    });\n  };\n  taskUncompleted = (item) => {\n    const filteredItem = this.state.completedTask.filter(\n      (prevItem) => prevItem.id !== item.id\n    );\n\n    const uncompletedTask = this.state.completedTask.find(\n      (prevItem) => prevItem.id === item.id\n    );\n\n    const updatedItems = [...this.state.items, uncompletedTask];\n\n    this.setState({\n      items: updatedItems,\n      completedTask: filteredItem,\n    });\n  };\n\n  clearCompletedTask = () => {\n    this.setState({\n      completedTask: [],\n    });\n  };\n  deleteCompletedTask = (id) => {\n    const filteredItem = this.state.completedTask.filter(\n      (item) => item.id !== id\n    );\n    this.setState({\n      completedTask: filteredItem,\n    });\n  };\n  showDetail = () => {\n    if (this.state.moreDetails === false) this.setState({ moreDetails: true });\n    else this.setState({ moreDetails: false });\n  };\n  handleTime = () => {\n    if (this.state.showTime === false) this.setState({ showTime: true });\n    else this.setState({ showTime: false });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto col-md-8 mt-4\">\n            <h3 className=\"text-capitalize text-center\">Todo List App</h3>\n            <TodoInput\n              item={this.state.item}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              editItem={this.state.editItem}\n              invalidInput={this.state.invalidInput}\n              moreDetails={this.state.moreDetails}\n              showDetail={this.showDetail}\n              showTime={this.state.showTime}\n              handleTime={this.handleTime}\n              time={this.state.time}\n              date={this.state.date}\n            />\n            <TodoList\n              items={this.state.items}\n              clearList={this.clearList}\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n              taskCompleted={this.taskCompleted}\n            />\n            <CompletedTask\n              items={this.state.completedTask}\n              taskUncompleted={this.taskUncompleted}\n              clearCompletedTask={this.clearCompletedTask}\n              deleteCompletedTask={this.deleteCompletedTask}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}